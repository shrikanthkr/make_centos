#version=CENTOS7
# Install OS instead of upgrade

install
# Install from an installation tree on a remote server.
# Required when using a minimal ISO image
url --url=http://centos.mirror.snu.edu.in/centos/7.9.2009/isos/x86_64
cdrom

text
poweroff

# System keyboard
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# Setup network interfaces via DHCP
network --device=eth0 --bootproto=dhcp --onboot=yes --hostname=system01

# Set root pw here (required by KS)
# python -c 'import crypt,getpass;pw=getpass.getpass();print(crypt.crypt(pw) if (pw==getpass.getpass("Confirm: ")) else exit())'

rootpw --iscrypted saZm/CAW3kRGQ
firewall --enabled --service=ssh
authconfig --enableshadow --passalgo=sha512
firstboot --disabled

# SELinux configuration
selinux --enforcing

# System services
services --enabled="chronyd"
services --enabled="sshd"

# Installation logging level
logging --level=debug

# System timezone
timezone America/Los_Angeles

# System bootloader configuration
bootloader --location=mbr --driveorder=sda,hda,vda --append="tsc=reliable divider=10 plymouth.enable=0 console=ttyS0" 

# Clear the Master Boot Record
zerombr

# Automatically create partitions, no LVM
autopart --nolvm

# Partition clearing information
clearpart --all --initlabel

%packages
@core
iputils
man
chrony
@Development Tools
nano
git
wget
vim
net-tools
sqlite-devel
psmisc
ncurses-devel
libtermcap-devel
newt-devel
libxml2-devel
libtiff-devel
gtk2-devel
libtool
libuuid-devel
subversion
kernel-devel
kernel-devel-3.10.0-1160.6.1.el7.x86_64
crontabs
cronie-anacron
%end

%post --log=/var/log/ks.post.log
#!/bin/bash

# Remove root password
#echo "Removing root password"
#passwd -d root

## Build vars used for motd and system-identification file
BUILD_DATE=`date '+%Y-%m-%d, %H:%m:%S'`
OS="CentOS 7.9.2009"
DOCS="https://affolter-egnineering.ch"

# Create MOTD
mv /etc/motd /etc/motd-backup
cat << MOTD > /etc/motd
                               _                  ___  _ 
                 ___ _   _ ___| |_ ___ _ __ ___  / _ \/ |
                / __| | | / __| __/ _ \ '_ ` _ \| | | | |
                \__ \ |_| \__ \ ||  __/ | | | | | |_| | |
                |___/\__, |___/\__\___|_| |_| |_|\___/|_|
                     |___/                               

                 This system belongs to the lab setup.

                             $OS

Last configuration changes: $BUILD_DATE

For more information please see /etc/system-identification

MOTD

# Create system-identification file
echo "Creating /etc/system-identification"
cat << IDENT > /etc/system-identification
                               _                  ___  _ 
                 ___ _   _ ___| |_ ___ _ __ ___  / _ \/ |
                / __| | | / __| __/ _ \ '_ ` _ \| | | | |
                \__ \ |_| \__ \ ||  __/ | | | | | |_| | |
                |___/\__, |___/\__\___|_| |_| |_|\___/|_|
                     |___/                               

                 This system belongs to the lab setup.

Security Category: Not defined yet   
Purpose: Not defined yet
Relationship: Not defined yet
Operating system: $OS
Current role: none
Primary Contact: Fabian Affolter <fabian@affolter-engineering.ch>

This file is provided as part of the Infrastructure standards.

Created/updated: $BUILD_DATE. Distributed by Kickstart installation.

IDENT

# Update all packages
echo "Updating packages ..."
/usr/bin/yum clean all
/usr/bin/yum update -y

/usr/bin/yum repolist all

# Clean up all yum caches
echo "Cleaning up yum caches"
/usr/bin/yum clean all

# Disable avahi
echo "Disabling avahi"
systemctl disable avahi-daemon.service 

# Disable kdump
echo "Disabling kdump"
systemctl disable kdump.service

echo "End of Kickstart"

%end

%post --log=/var/log/asterisk.post.log

setenforce 0
sed -i 's/\(^SELINUX=\).*/\SELINUX=permissive/' /etc/selinux/config

## 2. Grab and Install Asterisk and Configure the selections

cd /usr/src/
wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-16-current.tar.gz
tar xvfz asterisk-16-current.tar.gz
rm -f asterisk-*-current.tar.gz
cd asterisk-*
contrib/scripts/install_prereq install
./configure --libdir=/usr/lib64 --with-pjproject-bundled --with-jansson-bundled
contrib/scripts/get_mp3_source.sh
make menuselect.makeopts
menuselect/menuselect --enable app_macro menuselect.makeopts	
make
make install
make samples
make config
ldconfig

## 3. Change Ownerships to asterisk specific user

groupadd asterisk
useradd -r -d /var/lib/asterisk -g asterisk asterisk
usermod -aG audio,dialout asterisk
chown -R asterisk.asterisk /etc/asterisk /var/{lib,log,spool}/asterisk /usr/lib64/asterisk

sed -i -e '/AST_USER/ s/^.//' /etc/sysconfig/asterisk
sed -i -e '/AST_GROUP/ s/^.//' /etc/sysconfig/asterisk
sed -i -e '/rungroup/ s/^.//' /etc/asterisk/asterisk.conf
sed -i -e '/runuser/ s/^.//' /etc/asterisk/asterisk.conf

## 4. Enable service on startup

systemctl restart asterisk
systemctl enable asterisk


%end

%post --log=/var/log/freepbx.post.log

sudo yum -y update
sudo yum -y install lynx tftp-server unixODBC mysql-connector-odbc mariadb-server mariadb \
  httpd ncurses-devel sendmail sendmail-cf sox newt-devel libxml2-devel libtiff-devel \
  audiofile-devel gtk2-devel subversion kernel-devel git crontabs cronie \
  cronie-anacron wget vim uuid-devel sqlite-devel net-tools gnutls-devel python-devel texinfo \
  libuuid-devel

## 2. PHP Installation
sudo rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
sudo rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm

sudo yum remove php*
sudo yum -y install php56w php56w-pdo php56w-mysql php56w-mbstring php56w-pear php56w-process \ 
php56w-xml php56w-opcache php56w-ldap php56w-intl php56w-soap

## 3. Nodejs Installation

sudo curl -sL https://rpm.nodesource.com/setup_10.x | sudo bash -
sudo yum install -y nodejs

## 4. Mysql configuration

sudo systemctl enable mariadb.service
sudo systemctl start mariadb

sudo mysql -e "UPDATE mysql.user SET Password=PASSWORD('freepbxuser') WHERE User='root'"
sudo mysql -e "DELETE FROM mysql.user WHERE User=''"
sudo mysql -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')"
sudo mysql -e "DROP DATABASE IF EXISTS test"
sudo mysql -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'"
sudo mysql -e "FLUSH PRIVILEGES"

## 5. Httpd Configuration

sudo systemctl enable httpd.service
sudo systemctl start httpd.service

## 6. Installing peer requirements

sudo pear install Console_Getopt

## 7. Apache Modifications

sudo sed -i 's/\(^upload_max_filesize = \).*/\120M/' /etc/php.ini
sudo sed -i 's/^\(User\|Group\).*/\1 asterisk/' /etc/httpd/conf/httpd.conf
sudo sed -i 's/AllowOverride None/AllowOverride All/' /etc/httpd/conf/httpd.conf
sudo systemctl restart httpd.service

## 8. Freepbx configuration

cd /usr/src
sudo wget http://mirror.freepbx.org/modules/packages/freepbx/freepbx-15.0-latest.tgz
sudo tar xfz freepbx-15.0-latest.tgz
sudo rm -f freepbx-15.0-latest.tgz
cd freepbx
sudo ./start_asterisk start
sudo ./install -n --dbuser root --dbpass freepbxuser

%end